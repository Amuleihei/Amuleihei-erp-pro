<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skyeye.checkwork.dao.CheckWorkDao">

	<select id="queryNotCheckMember" resultType="java.util.Map">
		SELECT
			b.id createId
		FROM
			sys_eve_user b,
			sys_eve_user_staff c,
			sys_eve_user_staff_time d
		WHERE
			b.id NOT IN (SELECT 
							b.id 
						FROM 
							check_work a, 
							sys_eve_user b,
							sys_eve_user_staff c,
							sys_eve_user_staff_time d
						WHERE 
							a.check_date = #{yesterdayTime} 
						AND b.id = a.create_id 
						AND b.id = c.user_id
						AND c.id = d.staff_id
						AND d.check_work_time_id = #{timeId}
						AND a.time_id = d.check_work_time_id)
		AND b.user_lock = '0'
		AND b.id = c.user_id
		AND c.state = '1'
		AND c.id = d.staff_id
		AND d.check_work_time_id = #{timeId}
	</select>
	
	<insert id="insertCheckWorkBySystem" parameterType="java.util.Map">
		INSERT into check_work 
	    (id, check_date, create_id, state, clock_in_state, clock_out_state, work_hours, time_id)
	    VALUES
	    <foreach collection="list" item="item" index="index" separator=",">
	    	(#{item.id}, #{item.checkDate}, #{item.createId}, #{item.state}, #{item.clockInState}, #{item.clockOutState}, #{item.workHours}, #{item.timeId})
	    </foreach>
	</insert>
	
	<select id="queryNotCheckEndWorkId" resultType="java.util.Map">
		SELECT
			a.id
		FROM
			check_work a,
			sys_eve_user b,
			sys_eve_user_staff c,
			sys_eve_user_staff_time d
		WHERE
			a.check_date = #{yesterdayTime}
		AND b.id = a.create_id
		AND b.id = c.user_id
		AND c.id = d.staff_id
		AND d.check_work_time_id = #{timeId}
		AND a.time_id = d.check_work_time_id
		AND b.user_lock = 0
		AND (a.clock_out IS NULL OR LENGTH(a.clock_out) = 0)
	</select>
	
	<update id="editCheckWorkBySystem" parameterType="java.util.Map">
		update check_work
		<set>
			state = #{state},
			clock_out_state = #{clockOutState},
			work_hours = #{workHours}
		</set>
		WHERE id = #{id}
	</update>
	
	<select id="queryisAlreadyCheck" resultType="com.skyeye.checkwork.entity.CheckWork">
		SELECT
			a.id,
			IFNULL(a.clock_in, '') clockIn,
			IFNULL(a.clock_out, '') clockOut
		FROM
			check_work a
		WHERE 
			a.check_date = #{checkDate}
		AND a.create_id = #{createId}
		AND a.time_id = #{timeId}
	</select>
	
	<select id="queryStartWorkTime" resultType="java.util.Map">
		SELECT
			b.start_time clockIn,
			b.end_time clockOut
		FROM
			sys_eve_user_staff_time a,
			check_work_time b
		WHERE
			a.staff_id = #{staffId}
		AND a.check_work_time_id = #{timeId}
		AND a.check_work_time_id = b.id
	</select>
	
	<select id="queryCheckWorkList" resultType="java.util.Map">
		SELECT
			a.id,
			a.check_date checkDate,
			IFNULL(a.clock_in, '') clockIn,
			IFNULL(a.clock_out, '') clockOut,
			a.state,
			a.clock_in_longitude clockInLongitude,
			a.clock_in_latitude clockInLatitude,
			a.clock_in_address clockInAddress,
			a.clock_out_longitude clockOutLongitude,
			a.clock_out_latitude clockOutLatitude,
			a.clock_out_address clockOutAddress,
			a.clock_out_state clockOutState,
			a.clock_in_state clockInState,
			a.work_hours workHours,
			a.time_id timeId,
            a.create_id createId,
            IFNULL(c.id, '') appealSuccessId
		FROM
			check_work a
            LEFT JOIN check_work_appeal c ON a.id = c.work_id AND c.state = #{state}
		WHERE a.create_id = #{createId}
		ORDER BY a.check_date DESC
	</select>
	
	<select id="queryCheckWorkIdByAppealType" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.id,
			a.check_date name,
            a.time_id timeId,
            a.state
		FROM
			check_work a
		WHERE a.create_id = #{userId}
		AND a.id NOT in (SELECT b.work_id FROM check_work_appeal b WHERE b.state = 'pass')
        AND a.state NOT IN (0, 1)
		ORDER BY a.check_date DESC
	</select>
	
	<select id="queryCheckWorkMationByMonth" resultType="java.util.Map">
            SELECT
                concat(a.id, 'a') id,
				a.time_id timeId,
                '上班时间' title,
                a.check_date 'start',
                a.check_date 'end',
                IFNULL(a.clock_in,'未打卡') clockIn,
                true allday,
                CASE WHEN a.clock_in_state=3 THEN '#ff3300' WHEN a.clock_in_state=2 THEN '#ff9900' WHEN a.clock_in_state=1 THEN '#32cd99' ELSE '#ffffff' END backgroundColor,
                CASE WHEN a.clock_in_state=3 THEN '未打卡' WHEN a.clock_in_state=2 THEN '迟到' WHEN a.clock_in_state=1 THEN '正常' ELSE '未打卡' END stateName,
                '1' showBg,
                false editable,
                a.clock_in_state state,
                '10' type
            FROM
                check_work a
            WHERE
                a.create_id = #{userId}
            AND (a.time_id = #{timeId} OR a.time_id = '-')
			<if test="months != null and months.size() &gt; 0">
				<foreach collection="months" item="month" separator="," open=" AND date_format(a.check_date, '%Y-%m') in(" close=")">
					#{month}
				</foreach>
			</if>
        UNION ALL
            SELECT
                concat(a.id, 'b') id,
                a.time_id timeId,
                '下班时间' title,
                a.check_date 'start',
                a.check_date 'end',
                IFNULL(a.clock_out,'未打卡') clockIn,
                true allday,
                CASE WHEN a.clock_out_state=3 THEN '#ff3300' WHEN a.clock_out_state=2 THEN '#ff9900' WHEN a.clock_out_state=1 THEN '#32cd99' ELSE '#ffffff' END backgroundColor,
                CASE WHEN a.clock_out_state=3 THEN '未打卡' WHEN a.clock_out_state=2 THEN '早退' WHEN a.clock_out_state=1 THEN '正常' ELSE '未打卡' END stateName,
                '1' showBg,
                false editable,
                a.clock_out_state state,
				'10' type
            FROM
                check_work a
            WHERE
                a.create_id = #{userId}
            AND (a.time_id = #{timeId} OR a.time_id = '-')
			<if test="months != null and months.size() &gt; 0">
				<foreach collection="months" item="month" separator="," open=" AND date_format(a.check_date, '%Y-%m') in(" close=")">
					#{month}
				</foreach>
			</if>
    </select>
    
    <select id="queryCheckWorkReport" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        	a.user_id userId,
			a.job_number jobNumber,
            a.user_name userName,
            a.company_id companyId,
			a.department_id departmentId,
			a.job_id jobId,
            GROUP_CONCAT(b.check_work_time_id SEPARATOR ',') timsIds,
            (SELECT count(*) from check_work where create_id = a.user_id and state = 1 and check_date >= #{startTime} and #{endTime} >= check_date) fullTime,
            (SELECT count(*) from check_work where create_id = a.user_id and state = 2 and check_date >= #{startTime} and #{endTime} >= check_date) absenteeism,
            (SELECT count(*) from check_work where create_id = a.user_id and state = 3 and check_date >= #{startTime} and #{endTime} >= check_date) lackTime,
            (SELECT count(*) from check_work where create_id = a.user_id and clock_in_state = 2 and check_date >= #{startTime} and #{endTime} >= check_date) late,
            (SELECT count(*) from check_work where create_id = a.user_id and clock_out_state = 2 and check_date >= #{startTime} and #{endTime} >= check_date) leaveEarly,
            (SELECT count(*) from check_work where create_id = a.user_id and ((clock_out is not null and  clock_in is null) or (clock_out is null and  clock_in is not null)) and check_date >= #{startTime} and #{endTime} >= check_date) missing
        FROM
            sys_eve_user_staff a,
            sys_eve_user_staff_time b
        <where>
            a.id = b.staff_id
            AND (a.state = 1 OR (a.state = 2 AND #{endTime} >= a.quit_time AND a.quit_time >= #{startTime}) OR (a.state = 2 AND a.quit_time >= #{endTime}))
            <if test="userName != '' and userName != null">
                AND a.user_name LIKE '%${userName}%'
            </if>
            <if test="timeId != '' and timeId != null">
                AND b.check_work_time_id = #{timeId}
            </if>
        </where>
        GROUP BY a.id
        ORDER BY a.entry_time DESC, a.user_name
    </select>
	
    <select id="queryCheckWorkEcharts" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            #{day} checkDay,
            (SELECT count(*) from check_work a, sys_eve_user_staff b where a.create_id = b.user_id and a.state = 1 and a.check_date = #{day} and (b.state = 1 OR (b.state = 2 AND b.quit_time >= #{day}))
                <if test="userName != '' and userName != null">
                    AND b.user_name LIKE '%${userName}%'
                </if>
                <if test="timeId != '' and timeId != null">
                    AND a.time_id = #{timeId}
                </if>
            ) fullTime,
            (SELECT count(*) from check_work a, sys_eve_user_staff b where a.create_id = b.user_id and a.state = 2 and a.check_date = #{day} and (b.state = 1 OR (b.state = 2 AND b.quit_time >= #{day}))
                <if test="userName != '' and userName != null">
                    AND b.user_name LIKE '%${userName}%'
                </if>
                <if test="timeId != '' and timeId != null">
                    AND a.time_id = #{timeId}
                </if>
            ) absenteeism,
            (SELECT count(*) from check_work a, sys_eve_user_staff b where a.create_id = b.user_id and a.state = 3 and a.check_date = #{day} and (b.state = 1 OR (b.state = 2 AND b.quit_time >= #{day}))
                <if test="userName != '' and userName != null">
                    AND b.user_name LIKE '%${userName}%'
                </if>
                <if test="timeId != '' and timeId != null">
                    AND a.time_id = #{timeId}
                </if>
            ) lackTime,
            (SELECT count(*) from check_work a, sys_eve_user_staff b where a.create_id = b.user_id and a.clock_in_state = 2 and a.check_date = #{day} and (b.state = 1 OR (b.state = 2 AND b.quit_time >= #{day}))
                <if test="userName != '' and userName != null">
                    AND b.user_name LIKE '%${userName}%'
                </if>
                <if test="timeId != '' and timeId != null">
                    AND a.time_id = #{timeId}
                </if>
            ) late,
            (SELECT count(*) from check_work a, sys_eve_user_staff b where a.create_id = b.user_id and a.clock_out_state = 2 and a.check_date = #{day} and (b.state = 1 OR (b.state = 2 AND b.quit_time >= #{day}))
                <if test="userName != '' and userName != null">
                    AND b.user_name LIKE '%${userName}%'
                </if>
                <if test="timeId != '' and timeId != null">
                    AND a.time_id = #{timeId}
                </if>
            ) leaveEarly,
            (SELECT count(*) from check_work a, sys_eve_user_staff b where a.create_id = b.user_id and ((a.clock_out is not null and  a.clock_in is null) or (a.clock_out is null and  a.clock_in is not null)) and a.check_date = #{day} and (b.state = 1 OR (b.state = 2 AND b.quit_time >= #{day}))
                <if test="userName != '' and userName != null">
                    AND b.user_name LIKE '%${userName}%'
                </if>
                <if test="timeId != '' and timeId != null">
                    AND a.time_id = #{timeId}
                </if>
            ) missing
    </select>

    <select id="queryReportDetail" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            a.id,
            a.check_date checkDate,
            IFNULL(a.clock_in, '') clockIn,
            IFNULL(a.clock_out, '') clockOut,
            a.state,
            a.clock_out_state clockOutState,
            a.clock_in_state clockInState,
            a.work_hours workHours,
            IFNULL(c.state, '') appealState,
			a.create_id createId
        FROM
            check_work a
            LEFT JOIN check_work_appeal c ON a.id = c.work_id
        <where>
			<if test="userId != '' and userId != null">
				AND a.create_id = #{userId}
			</if>
			<if test="startTime != '' and startTime != null and endTime != '' and endTime != null">
				AND a.check_date >= #{startTime} AND #{endTime} >= a.check_date
			</if>
			<if test="day != '' and day != null">
				AND a.check_date = #{day}
			</if>
			<if test='state != "4" and state != "5" and state != "6"'>
				AND a.state = #{state}
			</if>
			<if test='state == "4"'>
				AND a.clock_in_state = 2
			</if>
			<if test='state == "5"'>
				AND a.clock_out_state = 2
			</if>
			<if test='state == "6"'>
				AND ((a.clock_out is not null and  a.clock_in is null) or (a.clock_out is null and  a.clock_in is not null))
			</if>
			<if test="timeId != '' and timeId != null">
				AND a.time_id = #{timeId}
			</if>
		</where>
        ORDER BY a.check_date ASC
    </select>
	
	<select id="queryHolidayScheduleDayMation" resultType="java.util.Map">
		SELECT
			a.id,
			a.`name`,
			a.start_time `start`,
			a.end_time `end`,
			CASE a.all_day WHEN '0' THEN false WHEN '1' THEN true ELSE true END allDay,
			CASE a.type WHEN '1' THEN '#63B8FF' WHEN '2' THEN '#CD69C9' WHEN '3' THEN '#54FF9F'
			    WHEN '4' THEN '#FF0000' WHEN '5' THEN '#ADADAD' ELSE '' END backgroundColor,
			'2' showBg,
			false editable, #是否可编辑
			a.type,
			'xiu' className
		FROM
			schedule_day a
		WHERE a.type = '3'
		AND (
		<foreach collection="list" item="item" index="index" >
			DATE_FORMAT(a.start_time, '%Y-%m') = #{item} OR DATE_FORMAT(a.end_time, '%Y-%m') = #{item} OR
		</foreach>
		1 = 0)
	</select>

	<select id="queryStaffCheckWorkTimeRelationByStaffId" resultType="java.util.Map">
		SELECT
			a.staff_id staffId,
			a.check_work_time_id timeId
		FROM
			sys_eve_user_staff_time a
		WHERE
			a.staff_id = #{staffId}
	</select>
	
</mapper>